const { MongoClient } = require("mongodb");

const uri =
  "mongodb+srv://manhnguyen3122:Manh031220@cluster0.rq4vw.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0";
const client = new MongoClient(uri, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

let db;
async function connectDB() {
  if (!db) {
    await client.connect();
    db = client.db("productDatabase");
  }
  return db;
}

module.exports = async (req, res) => {
  if (req.method !== "GET") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  const { code } = req.query;
  if (!code) {
    return res.status(400).json({ error: "Short code is required." });
  }

  try {
    // K·∫øt n·ªëi MongoDB
    const db = await connectDB();
    const productsCollection = db.collection("products");

    // L·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ DB
    const product = await productsCollection.findOne({ shortCode: code });

    if (!product) {
      return res.status(404).json({ error: "Product not found." });
    }

    console.log("Product found:", product);

    // Ki·ªÉm tra User-Agent
    const userAgent = req.headers["user-agent"] || "";
    //tinhchat
    const link1 = "https://s.shopee.vn/7zx4gJh1C3";
    //sua rm
    const link2 = "https://s.shopee.vn/5KwLskfPZH";

    if (/facebookexternalhit/i.test(userAgent)) {
      // üëâ N·∫øu l√† Facebook Crawler, tr·∫£ v·ªÅ m·ªôt trang HTML t√πy ch·ªânh (Kh√¥ng ch·ª©a link th·ª±c)
      return res.send(`
                <html>
                    <head>
                        <title>Th√¥ng tin s·∫£n ph·∫©m</title>
                        <meta property="og:title" content="S·∫£n ph·∫©m m·ªõi nh·∫•t c·ªßa ch√∫ng t√¥i">
                        <meta property="og:description" content="Kh√°m ph√° s·∫£n ph·∫©m ƒë·∫∑c bi·ªát n√†y!">
                    </head>
                    <body>
                        <h1>Th√¥ng tin s·∫£n ph·∫©m</h1>
                        <p>ƒê√¢y l√† s·∫£n ph·∫©m hot nh·∫•t c·ªßa ch√∫ng t√¥i. Nh·∫•n v√†o ƒë∆∞·ªùng link ƒë·ªÉ t√¨m hi·ªÉu th√™m!</p>
                    </body>
                </html>
            `);
    }

    // üëâ Ng∆∞·ªùi d√πng th·ª±c s·ª± (kh√¥ng ph·∫£i Facebook Crawler)
    let redirectUrl = link2; // M·∫∑c ƒë·ªãnh: Desktop
    if (/iPhone/i.test(userAgent)) {
      // üîπ **M·ªü tr·ª±c ti·∫øp Shopee App b·∫±ng Intent**
      return res.send(`
          <html>
              <head>
                  <script>
                      function openShopee() {
                          var shopeeLink = "${link1}";
                          var fallbackUrl = "${link1}";
                          var isFacebookApp = navigator.userAgent.includes("FBAN") || navigator.userAgent.includes("FBAV");

                          if (isFacebookApp) {
                              // N·∫øu ƒëang trong Facebook/In-App Browser, m·ªü trong Safari ƒë·ªÉ tr√°nh confirm
                              window.open(shopeeLink, "_blank");
                          } else {
                              // N·∫øu kh√¥ng, th·ª≠ m·ªü Shopee App tr∆∞·ªõc
                              window.location.replace(shopeeLink);

                              // N·∫øu Shopee kh√¥ng m·ªü sau 2 gi√¢y, fallback sang web
                              setTimeout(() => {
                                  window.location.replace(fallbackUrl);
                              }, 2000);
                          }
                      }
                      window.onload = openShopee;
                  </script>
              </head>
              <body>
                  <p>ƒêang m·ªü Shopee...</p>
              </body>
          </html>
      `);
    }

    console.log("Redirecting to:", redirectUrl);
    return res.redirect(302, redirectUrl);
  } catch (error) {
    console.error("Error handling request:", error);
    return res.status(500).json({ error: "Internal server error." });
  }
};
